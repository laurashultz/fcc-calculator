{"version":3,"sources":["index.js","buttons.js"],"names":["myBtns","buttons","data","Calculator","props","state","mem","current","cutoff","calc","lastClick","onKeyPress","bind","onClick","doMath","handleNum","handleDec","handleOp","handleExecute","document","addEventListener","this","removeEventListener","event","exChk","numChk","findIndex","x","value","parseInt","key","opChk","length","val","target","type","dataset","num1","num2","opper","substring","setState","String","indexOf","result","Number","parseFloat","chop","slice","id","class","data-type","React","Component","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1e919404.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport buttons from './buttons.js';\n\nvar myBtns = buttons.data;\n\nclass Calculator extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = ({\n      mem: '',\n      current: '0',\n      cutoff: '',\n      calc: [0,''],\n      lastClick: ''\n    });\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.doMath = this.doMath.bind(this);\n    this.handleNum = this.handleNum.bind(this);\n    this.handleDec = this.handleDec.bind(this);\n    this.handleOp = this.handleOp.bind(this);\n    this.handleExecute = this.handleExecute.bind(this);\n  }\n  \ncomponentDidMount() {\n    document.addEventListener('keydown', this.onKeyPress);\n  }\ncomponentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyPress);\n  }\n onKeyPress(event){\n  let numChk = myBtns.findIndex(x=> x.value === parseInt(event.key)); //numChk - if the key pressed was 0-9, it returns the number in number format (also the index of the appropriate object in myBtns)\n  let opChk = myBtns.findIndex(x=> x.value === event.key); //if key pressed was an operator or decimal, returns the index of the appropriate object in myBtns\n  let exChk;\n  if(event.key === 'Delete'){\n    exChk = 16;  //index of 'clear' in myBtns\n  } else if(event.key === 'Enter'){\n    exChk = 14; //index of '=' in myBtns\n  } \n\n   let mem = (this.state.mem.length !== 0);\n  if(numChk>=0){\n    this.handleNum(myBtns[numChk].value,mem);\n  } else if(opChk===15){ //checks if opChk is a decimal\n    this.handleDec();\n  } else if(opChk >=0){\n    this.handleOp(myBtns[opChk].value,mem);\n  } else if (exChk>=0){\n    this.handleExecute(myBtns[exChk].value,mem);\n  } else{\n    return;\n  }\n\n }\n/*the onClick method handles any button click*/\n onClick(event){\nlet val = event.target.value;\nlet type = event.target.dataset.type;\nlet mem = (this.state.mem.length !== 0);\n\n/*this switch statement checks the 'type' property of the object corresponding to the button \nthat was clicked, and calls the appropriate method to handle updating the state */\nswitch(type){\n  case \"num\":\n     this.handleNum(val,mem);\n     break;\n  case \"operator\":\n     this.handleOp(val,mem);\n     break;     \n  case \"decimal\":\n     this.handleDec();\n     break;\n  case \"executor\":\n     this.handleExecute(val,mem);\n     break;\n  default:\n     break;\n\n}\n}\n/*simple method for completing the actual math. Pass it two numbers and the operator, and it will return the calculated result */\ndoMath(num1,num2,opper) {\n        switch(opper){\n          case '+':\n            return num1+num2;\n          case '-':\n            return num1-num2;\n          case '/':\n            return num1/num2;\n          case '*':\n            return num1*num2;\n          default:\n            return 1;\n\n        }\n}\n/*the handleNum method handles whenever a number is clicked*/\nhandleNum(val){\nlet x = this.state.cutoff;\nif(this.state.cutoff.length > 14){\n  x = x.substring(1,);\n} else{\n  x = this.state.cutoff;\n}\nif(this.state.current !== '0'){\nthis.setState({\n  current: this.state.current + String(val),\n  cutoff: x + String(val),\n  lastClick: \"num\"\n});\n} else{\n  this.setState({\n    current: String(val),\n    cutoff: String(val),\n    lastClick: \"num\"\n  });\n}\n\n}\n\n/*the handleDec method handles whenever the decimal is clicked*/\nhandleDec(){\nif(this.state.current.indexOf(\".\")>=0){\n  return;\n} else if(this.state.current === '0'){\n  this.setState({\n    current: '0.',\n    cutoff: '0.'\n  });\n} else {\n  this.setState({\n    current: this.state.current + '.',\n    cutoff: this.state.cutoff + '.',\n    lastClick: \"decimal\"\n  });\n}\n}\n\n/*the handleOp method handles whenever an operator is clicked */\nhandleOp(val,mem){\nif(mem && (this.state.lastClick === 'operator')){  /*Check if there is something in memory AND the last click was an operator */\n    if(val==='-' && (this.state.current !== '-')){ /*check if the current click is minus AND the current display is not \"-\" */\n      this.setState({    /*we have the situation where there was an operator clicked previously, and now we are hitting the minus sign, so the person wants a negative number, set display to \"-\" */\n        current: '-',\n        cutoff: '-'\n      });\n    }else if(val === '-' && (this.state.current ==='-')){ /*if we clicked the minus sign multiple times, you will have a negative num and the operator will be negative, no change for duplicate hit of the button */\n      return;\n    } else {     /*this else statement captures: if there is something in memory, last click was an operator, and it was not the '-' button */\n      if(this.state.current === '-'){     /*check if we switched to another operator from selecting minus on the prior click*/\n\n        this.setState({            /*if someone clicks, for example '5 * - +', it will get rid of the negative sign that was added when the user clicked '-' on the prior button click*/\n          calc: [this.state.calc[0],val],\n          lastClick: 'operator',\n          current: '',\n          cutoff: ''\n        });\n      }\n    }\n} else if(mem && (this.state.lastClick !== 'operator')) {\n  let result = this.doMath(this.state.calc[0],Number.parseFloat(this.state.current),this.state.calc[1]);\n  this.setState({\n    mem: String(result),\n    current: '',\n    calc: [result,val],\n    lastClick: 'operator'\n  })\n} else{\n  this.setState({\n    mem: this.state.current,\n    current: '',\n    cutoff: '',\n    calc: [Number.parseFloat(this.state.current),val],\n    lastClick: 'operator'\n  });\n}\n\n\n}\n/*the handleExecute method will handle execution of 'clear' or 'equals' calculator function*/\nhandleExecute(val,mem){\nif(val===\"clear\"){ /*check if the target of the click was \"clear\"*/\n  this.setState({  /*if it was 'clear', set back to original state*/\n    mem: '',\n    current: '0',\n    cutoff: '',\n    calc: [0,''],\n    lastClick: ''\n  });\n} else if (val===\"=\") { /* if the equals button was pressed*/\n    if(mem){\n    let result = this.doMath(this.state.calc[0],parseFloat(this.state.current),this.state.calc[1]); /*run the doMath method to calculate */\n    let chop;\n    if (result.length > 13){  /*check the length of the result to ensure the display doesn't become huge due to long parsed floats [or just huge user-input numbers] */\n      chop = result.slice(result.length-14,result.length-1);\n    } else{\n      chop = result;\n    }\n    this.setState({\n      mem: '',\n      current: result,\n      cutoff: chop,\n      calc: [1,'='],\n      lastClick: 'executor'\n    });\n    }\n}\n\n}\n render() {\n  return(\n  <div id=\"calcbox\">\n        <div class=\"disp mem-disp\" id=\"memory\">{this.state.mem}{this.state.calc[1]}</div>\n\n        <div class=\"disp main-disp\" id=\"display\">\n          {this.state.current.length > 14\n            ? this.state.cutoff\n            : this.state.current}\n      </div>\n      \n<div class=\"btnBox\">\n          <div class=\"numeric\">\n            <div class=\"rows\">\n          <button class=\"button button-num\" id={myBtns[0].id} data-type={myBtns[0].type} value={myBtns[0].value} onClick= {this.onClick}>0</button>\n          <button class=\"button\" id={myBtns[15].id} data-type={myBtns[15].type} value={myBtns[15].value} onClick={this.onClick}>.</button>\n            </div>\n            <div class=\"rows\">\n          <button class=\"button button-num\" id={myBtns[1].id} data-type={myBtns[1].type} value={myBtns[1].value} onClick= {this.onClick}>1</button>\n          <button class=\"button button-num\" id={myBtns[2].id} data-type={myBtns[2].type} value={myBtns[2].value} onClick= {this.onClick}>2</button>\n          <button class=\"button button-num\" id={myBtns[3].id} data-type={myBtns[3].type} value={myBtns[3].value} onClick= {this.onClick}>3</button>\n            </div>\n            <div class=\"rows\">\n          <button class=\"button button-num\" id={myBtns[4].id} data-type={myBtns[4].type} value={myBtns[4].value} onClick= {this.onClick}>4</button>\n          <button class=\"button button-num\" id={myBtns[5].id} data-type={myBtns[5].type} value={myBtns[5].value} onClick= {this.onClick}>5</button>\n          <button class=\"button button-num\" id={myBtns[6].id} data-type={myBtns[6].type} value={myBtns[6].value} onClick= {this.onClick}>6</button>\n            </div>\n            <div class=\"rows\">\n          <button class=\"button button-num\" id={myBtns[7].id} data-type={myBtns[7].type} value={myBtns[7].value} onClick= {this.onClick}>7</button>\n          <button class=\"button button-num\" id={myBtns[8].id} data-type={myBtns[8].type} value={myBtns[8].value} onClick= {this.onClick}>8</button>\n          <button class=\"button button-num\" id={myBtns[9].id} data-type={myBtns[9].type} value={myBtns[9].value} onClick= {this.onClick}>9</button>\n            </div>\n            <div class=\"rows\">\n          <button class=\"button button-num\" id={myBtns[16].id} data-type={myBtns[16].type} value={myBtns[16].value} onClick= {this.onClick}>c</button>\n          <button class=\"button button-num\" id={myBtns[13].id} data-type={myBtns[13].type} value={myBtns[13].value} onClick= {this.onClick}>/</button>\n          <button class=\"button button-num\" id={myBtns[12].id} data-type={myBtns[12].type} value={myBtns[12].value} onClick= {this.onClick}>x</button>\n            </div>\n           </div>\n        <div class=\"operators\">\n          <button class=\"button\" id={myBtns[11].id} data-type={myBtns[11].type} value={myBtns[11].value} onClick= {this.onClick}>-</button>\n          <button class=\"button\" id={myBtns[10].id} data-type={myBtns[10].type} value={myBtns[10].value} onClick= {this.onClick}>+</button>\n          <button class=\"button\" id={myBtns[14].id} data-type={myBtns[14].type} value={myBtns[14].value} onClick= {this.onClick}>=</button>\n          \n          </div> \n      </div>\n      \n  </div>\n    \n    \n    \n    \n  )};\n}\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n\n","const buttons= [{id: \"zero\", value: 0, type: \"num\"},\n              {id: \"one\", value: 1, type: \"num\"},\n              {id: \"two\", value: 2, type: \"num\"},\n              {id: \"three\", value: 3, type: \"num\"},\n              {id: \"four\", value: 4, type: \"num\"},\n              {id: \"five\", value: 5, type: \"num\"},\n              {id: \"six\", value: 6, type: \"num\"},\n              {id: \"seven\", value: 7, type: \"num\"},\n              {id: \"eight\", value: 8, type: \"num\"},\n              {id: \"nine\", value: 9, type: \"num\"},\n              {id: \"add\", value: \"+\", type: \"operator\"},\n              {id: \"subtract\", value: \"-\", type: \"operator\"},\n              {id: \"multiply\", value: \"*\", type: \"operator\"},\n              {id: \"divide\", value: \"/\", type: \"operator\"},\n              {id: \"equals\", value: \"=\", type: \"executor\"},\n              {id: \"decimal\", value: \".\", type: \"decimal\"},\n              {id: \"clear\", value: \"clear\", type: \"executor\"},\n];\n\nmodule.exports = {data: buttons}\n"],"sourceRoot":""}